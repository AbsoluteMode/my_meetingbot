#!/usr/bin/env python3
"""
MeetingBot - –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –≤—Å—Ç—Ä–µ—á
–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –≤—Å—Ç—Ä–µ—á—É –ø–æ —Å—Å—ã–ª–∫–µ –∏ –¥–µ–ª–∞–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç—ã
"""
import os
import time
import random
from datetime import datetime
from pathlib import Path
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.common.action_chains import ActionChains
from webdriver_manager.chrome import ChromeDriverManager
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
MEETING_URL = os.getenv("MEETING_URL", "https://www.google.com")
BOT_NAME = os.getenv("BOT_NAME", "MeetingBot")
HEADLESS = os.getenv("HEADLESS", "true").lower() == "true"
WINDOW_WIDTH = int(os.getenv("WINDOW_WIDTH", "1920"))
WINDOW_HEIGHT = int(os.getenv("WINDOW_HEIGHT", "1080"))
SCREENSHOT_DELAY = int(os.getenv("SCREENSHOT_DELAY", "3"))

# –ü—É—Ç–∏
BASE_DIR = Path(__file__).parent
SESSIONS_DIR = BASE_DIR / "sessions"
SESSIONS_DIR.mkdir(parents=True, exist_ok=True)


class MeetingBot:
    """–ë–æ—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ –≤—Å—Ç—Ä–µ—á"""

    def __init__(self):
        self.driver = None
        self.session_id = datetime.now().strftime("%Y%m%d_%H%M%S")
        self.session_dir = SESSIONS_DIR / self.session_id
        self.screenshots_dir = self.session_dir / "screenshots"
        self.screenshots_dir.mkdir(parents=True, exist_ok=True)
        self.screenshot_counter = 0

    def setup_browser(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –±—Ä–∞—É–∑–µ—Ä–∞"""
        print("üöÄ –ó–∞–ø—É—Å–∫ –±—Ä–∞—É–∑–µ—Ä–∞...")

        chrome_options = Options()

        if HEADLESS:
            chrome_options.add_argument("--headless=new")
            print("   –†–µ–∂–∏–º: headless (–±–µ–∑ GUI)")
        else:
            print("   –†–µ–∂–∏–º: —Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –±—Ä–∞—É–∑–µ—Ä–∞")

        # –ë–∞–∑–æ–≤—ã–µ –æ–ø—Ü–∏–∏
        chrome_options.add_argument("--no-sandbox")
        chrome_options.add_argument("--disable-dev-shm-usage")
        chrome_options.add_argument(f"--window-size={WINDOW_WIDTH},{WINDOW_HEIGHT}")
        chrome_options.add_argument("--disable-gpu")

        # –ê–Ω—Ç–∏–¥–µ—Ç–µ–∫—Ç –æ–ø—Ü–∏–∏
        chrome_options.add_argument("--disable-blink-features=AutomationControlled")  # –°–∫—Ä—ã—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é
        chrome_options.add_experimental_option("excludeSwitches", ["enable-automation"])  # –£–±—Ä–∞—Ç—å —Ñ–ª–∞–≥ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏
        chrome_options.add_experimental_option('useAutomationExtension', False)  # –û—Ç–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏

        # –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π User-Agent
        chrome_options.add_argument("user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36")

        # –û–ø—Ü–∏–∏ –¥–ª—è –≤—Å—Ç—Ä–µ—á
        chrome_options.add_argument("--use-fake-ui-for-media-stream")  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞–∑—Ä–µ—à–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –º–∏–∫—Ä–æ/–∫–∞–º–µ—Ä–µ
        chrome_options.add_argument("--use-fake-device-for-media-stream")  # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥—Ä–∞–π–≤–µ—Ä–∞
        service = Service(ChromeDriverManager().install())
        self.driver = webdriver.Chrome(service=service, options=chrome_options)

        # –£–¥–∞–ª–µ–Ω–∏–µ webdriver —Ñ–ª–∞–≥–∞ —á–µ—Ä–µ–∑ JavaScript
        self.driver.execute_cdp_cmd('Page.addScriptToEvaluateOnNewDocument', {
            'source': '''
                Object.defineProperty(navigator, 'webdriver', {
                    get: () => undefined
                });

                // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥—Ä—É–≥–∏—Ö –¥–µ—Ç–µ–∫—Ç–∏—Ä—É–µ–º—ã—Ö —Å–≤–æ–π—Å—Ç–≤
                window.navigator.chrome = {
                    runtime: {}
                };

                Object.defineProperty(navigator, 'plugins', {
                    get: () => [1, 2, 3, 4, 5]
                });

                Object.defineProperty(navigator, 'languages', {
                    get: () => ['en-US', 'en', 'ru']
                });
            '''
        })

        print(f"   –†–∞–∑–º–µ—Ä –æ–∫–Ω–∞: {WINDOW_WIDTH}x{WINDOW_HEIGHT}")
        print("‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–ø—É—â–µ–Ω")

    def human_like_mouse_movement(self, duration=2):
        """
        –≠–º—É–ª–∏—Ä—É–µ—Ç —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è –º—ã—à–∏ —á–µ—Ä–µ–∑ JavaScript

        Args:
            duration: –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–≤–∏–∂–µ–Ω–∏–π –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        """
        print("üñ±Ô∏è  –≠–º—É–ª—è—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏–π –º—ã—à–∏...")

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ —Ç–æ—á–∫–∏ –¥–ª—è –¥–≤–∏–∂–µ–Ω–∏—è
        num_movements = random.randint(3, 7)

        for _ in range(num_movements):
            # –°–ª—É—á–∞–π–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
            x = random.randint(50, WINDOW_WIDTH - 50)
            y = random.randint(50, WINDOW_HEIGHT - 50)

            # –≠–º—É–ª–∏—Ä—É–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ –º—ã—à–∏ —á–µ—Ä–µ–∑ JavaScript
            self.driver.execute_script(f"""
                var event = new MouseEvent('mousemove', {{
                    'view': window,
                    'bubbles': true,
                    'cancelable': true,
                    'clientX': {x},
                    'clientY': {y}
                }});
                document.dispatchEvent(event);
            """)

            # –°–ª—É—á–∞–π–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –¥–≤–∏–∂–µ–Ω–∏—è–º–∏
            time.sleep(random.uniform(0.1, 0.3))

        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
        time.sleep(random.uniform(0.5, 1.0))

    def human_like_scroll(self):
        """
        –≠–º—É–ª–∏—Ä—É–µ—Ç —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π —Å–∫—Ä–æ–ª–ª–∏–Ω–≥ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        """
        print("üìú –≠–º—É–ª—è—Ü–∏—è —Å–∫—Ä–æ–ª–ª–∏–Ω–≥–∞...")

        # –°–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∫—Ä–æ–ª–ª–æ–≤
        num_scrolls = random.randint(1, 3)

        for _ in range(num_scrolls):
            # –°–ª—É—á–∞–π–Ω–∞—è –≤–µ–ª–∏—á–∏–Ω–∞ —Å–∫—Ä–æ–ª–ª–∞
            scroll_amount = random.randint(100, 300)

            self.driver.execute_script(f"window.scrollBy(0, {scroll_amount});")
            time.sleep(random.uniform(0.3, 0.8))

    def human_like_delay(self, min_sec=1, max_sec=3):
        """
        –°–ª—É—á–∞–π–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –∫–∞–∫ —É —á–µ–ª–æ–≤–µ–∫–∞

        Args:
            min_sec: –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
            max_sec: –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
        """
        delay = random.uniform(min_sec, max_sec)
        print(f"‚è≥ –ó–∞–¥–µ—Ä–∂–∫–∞ {delay:.2f} —Å–µ–∫...")
        time.sleep(delay)

    def human_like_click(self, x, y, x_variance=5, y_variance=5, show_marker=True, use_action_chains=False):
        """
        –≠–º—É–ª–∏—Ä—É–µ—Ç —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π –∫–ª–∏–∫ –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º

        Args:
            x: –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ X
            y: –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ Y
            x_variance: —Ä–∞–∑–±—Ä–æ—Å –ø–æ X (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ¬±5)
            y_variance: —Ä–∞–∑–±—Ä–æ—Å –ø–æ Y (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ¬±5)
            show_marker: –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤–∏–∑—É–∞–ª—å–Ω—ã–π –º–∞—Ä–∫–µ—Ä –Ω–∞ –º–µ—Å—Ç–µ –∫–ª–∏–∫–∞
            use_action_chains: –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å ActionChains (–¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤)
        """
        print(f"üñ±Ô∏è  –ö–ª–∏–∫ –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º ({x}, {y})...")

        # –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å –∫ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
        x_random = x + random.randint(-x_variance, x_variance)
        y_random = y + random.randint(-y_variance, y_variance)

        # –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–π –º–∞—Ä–∫–µ—Ä –Ω–∞ –º–µ—Å—Ç–æ –∫–ª–∏–∫–∞
        if show_marker:
            self.driver.execute_script(f"""
                var marker = document.createElement('div');
                marker.style.position = 'fixed';
                marker.style.left = '{x_random}px';
                marker.style.top = '{y_random}px';
                marker.style.width = '20px';
                marker.style.height = '20px';
                marker.style.borderRadius = '50%';
                marker.style.backgroundColor = 'red';
                marker.style.border = '3px solid yellow';
                marker.style.zIndex = '999999';
                marker.style.pointerEvents = 'none';
                marker.style.transform = 'translate(-50%, -50%)';
                document.body.appendChild(marker);
            """)

        if use_action_chains:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º ActionChains –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (Zoom UI)
            print(f"   üéØ –ò—Å–ø–æ–ª—å–∑—É—é ActionChains (—Ä–µ–∞–ª—å–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –º—ã—à–∏)")

            element = self.driver.execute_script(f"""
                var elem = document.elementFromPoint({x_random}, {y_random});
                if (elem) {{
                    console.log('–ù–∞–π–¥–µ–Ω —ç–ª–µ–º–µ–Ω—Ç:', elem.tagName, elem.className, elem.id);
                }}
                return elem;
            """)

            if element:
                element_info = self.driver.execute_script("""
                    return {
                        tag: arguments[0].tagName,
                        class: arguments[0].className,
                        id: arguments[0].id,
                        text: arguments[0].textContent ? arguments[0].textContent.substring(0, 50) : ''
                    };
                """, element)
                print(f"   üìç –≠–ª–µ–º–µ–Ω—Ç: {element_info}")

                try:
                    actions = ActionChains(self.driver)
                    actions.move_to_element_with_offset(element, 0, 0)
                    actions.pause(random.uniform(0.1, 0.3))
                    actions.click()
                    actions.perform()
                    print(f"   ‚úÖ ActionChains –∫–ª–∏–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω (–†–ï–ê–õ–¨–ù–´–ô –ö–õ–ò–ö –ú–´–®–¨–Æ)")
                except Exception as e:
                    print(f"   ‚ö†Ô∏è  –û—à–∏–±–∫–∞ ActionChains: {e}")
                    print(f"   –ü—Ä–æ–±—É—é –ø—Ä—è–º–æ–π WebElement.click()...")
                    try:
                        element.click()
                        print(f"   ‚úÖ WebElement.click() –≤—ã–ø–æ–ª–Ω–µ–Ω")
                    except Exception as e2:
                        print(f"   ‚ùå WebElement.click() —Ç–æ–∂–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª: {e2}")
            else:
                print(f"   ‚ö†Ô∏è  –≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–æ—á–∫–µ ({x_random}, {y_random})")
        else:
            # –ü—Ä—è–º–æ–π JavaScript –∫–ª–∏–∫ –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–∫–Ω–æ–ø–∫–∏, —Å—Å—ã–ª–∫–∏)
            clicked = self.driver.execute_script(f"""
                var element = document.elementFromPoint({x_random}, {y_random});
                if (element) {{
                    // –≠–º—É–ª–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Å–æ–±—ã—Ç–∏–π –∫–ª–∏–∫–∞
                    var events = ['mouseenter', 'mouseover', 'mousedown', 'mouseup', 'click'];
                    events.forEach(function(eventType) {{
                        var event = new MouseEvent(eventType, {{
                            'view': window,
                            'bubbles': true,
                            'cancelable': true,
                            'clientX': {x_random},
                            'clientY': {y_random}
                        }});
                        element.dispatchEvent(event);
                    }});
                    return true;
                }}
                return false;
            """)

            if clicked:
                print(f"   ‚úÖ JavaScript –∫–ª–∏–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω –ø–æ ({x_random}, {y_random})")
            else:
                print(f"   ‚ö†Ô∏è  –≠–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–æ—á–∫–µ ({x_random}, {y_random})")

        time.sleep(random.uniform(0.3, 0.7))

    def human_like_type(self, text):
        """
        –≠–º—É–ª–∏—Ä—É–µ—Ç —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –≤ –∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç

        Args:
            text: —Ç–µ–∫—Å—Ç –¥–ª—è –≤–≤–æ–¥–∞
        """
        print(f"‚å®Ô∏è  –í–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ '{text}'...")

        # –í–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç –ø–æ—Å–∏–º–≤–æ–ª—å–Ω–æ —á–µ—Ä–µ–∑ send_keys
        try:
            from selenium.webdriver.common.keys import Keys

            # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
            active_element = self.driver.switch_to.active_element

            # –û—á–∏—â–∞–µ–º –ø–æ–ª–µ
            active_element.clear()

            # –í–≤–æ–¥–∏–º –ø–æ—Å–∏–º–≤–æ–ª—å–Ω–æ
            for char in text:
                active_element.send_keys(char)
                time.sleep(random.uniform(0.05, 0.15))

            print(f"   ‚úÖ –¢–µ–∫—Å—Ç '{text}' –≤–≤–µ–¥–µ–Ω –ø–æ—Å–∏–º–≤–æ–ª—å–Ω–æ")
        except Exception as e:
            print(f"   ‚ö†Ô∏è  –û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞: {e}")

        time.sleep(random.uniform(0.3, 0.5))

    def open_meeting(self, url):
        """–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –≤—Å—Ç—Ä–µ—á—É –ø–æ URL"""
        print(f"\nüîó –û—Ç–∫—Ä—ã–≤–∞—é –≤—Å—Ç—Ä–µ—á—É: {url}")
        self.driver.get(url)

        # –°–∫—Ä–∏–Ω—à–æ—Ç –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
        print(f"‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏...")
        self.human_like_delay(3, 5)
        self.take_screenshot("01_page_loaded.png")

        # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ "–ü—Ä–∏–Ω—è—Ç—å –∫—É–∫–∏"
        print("\nüç™ –ù–∞–∂–∏–º–∞—é –∫–Ω–æ–ø–∫—É '–ü—Ä–∏–Ω—è—Ç—å –∫—É–∫–∏'...")
        cookie_elem = self.driver.execute_script("""
            var elem = document.elementFromPoint(677, 262);
            if (elem) {
                return {
                    tag: elem.tagName,
                    id: elem.id,
                    class: elem.className,
                    text: elem.textContent ? elem.textContent.substring(0, 50) : ''
                };
            }
            return null;
        """)
        print(f"   üîç –≠–ª–µ–º–µ–Ω—Ç –≤ —Ç–æ—á–∫–µ (677, 262): {cookie_elem}")
        self.human_like_click(677, 262)
        self.human_like_delay(2, 3)
        self.take_screenshot("02_after_cookie_accept.png")

        # –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è"
        print("\nüé• –ù–∞–∂–∏–º–∞—é –∫–Ω–æ–ø–∫—É '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è'...")
        self.human_like_click(592, 439)
        self.human_like_delay(2, 3)
        self.take_screenshot("03_after_join.png")

        # –ö–ª–∏–∫ –ø–æ —Å—Å—ã–ª–∫–µ "Join from your browser"
        print("\nüåê –ù–∞–∂–∏–º–∞—é 'Join from your browser'...")
        self.human_like_click(736, 616)
        self.human_like_delay(3, 5)
        self.take_screenshot("04_after_browser_join.png")

        # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –≤ iframe –≥–¥–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è Zoom –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        print("\nüîÑ –ü–µ—Ä–µ–∫–ª—é—á–∞—é—Å—å –≤ iframe Zoom...")
        try:
            iframe = self.driver.find_element("id", "webclient")
            self.driver.switch_to.frame(iframe)
            print("   ‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω –≤ iframe 'webclient'")
            self.take_screenshot("04b_inside_iframe.png")

            # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —ç–ª–µ–º–µ–Ω—Ç–∞—Ö –ø–æ –Ω–∞—à–∏–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
            print("\nüîç –ò—â—É —Å–µ–ª–µ–∫—Ç–æ—Ä—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤...")

            # Mute button
            mute_info = self.driver.execute_script("""
                var elem = document.elementFromPoint(339, 486);
                if (elem) {
                    return {
                        tag: elem.tagName,
                        id: elem.id,
                        class: elem.className,
                        ariaLabel: elem.getAttribute('aria-label'),
                        role: elem.getAttribute('role'),
                        type: elem.getAttribute('type')
                    };
                }
                return null;
            """)
            print(f"   Mute (339, 486): {mute_info}")

            # Stop Video button
            video_info = self.driver.execute_script("""
                var elem = document.elementFromPoint(427, 486);
                if (elem) {
                    return {
                        tag: elem.tagName,
                        id: elem.id,
                        class: elem.className,
                        ariaLabel: elem.getAttribute('aria-label'),
                        role: elem.getAttribute('role'),
                        type: elem.getAttribute('type')
                    };
                }
                return null;
            """)
            print(f"   Stop Video (427, 486): {video_info}")

            # Name input
            name_info = self.driver.execute_script("""
                var elem = document.elementFromPoint(969, 256);
                if (elem) {
                    return {
                        tag: elem.tagName,
                        id: elem.id,
                        class: elem.className,
                        name: elem.getAttribute('name'),
                        placeholder: elem.getAttribute('placeholder'),
                        type: elem.getAttribute('type')
                    };
                }
                return null;
            """)
            print(f"   Name Input (969, 256): {name_info}")

        except Exception as e:
            print(f"   ‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –≤ iframe: {e}")

        # –ù–∞—Ö–æ–¥–∏–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è Mute –∏ Stop Video
        print("\nüîç –ò—â—É –∫–Ω–æ–ø–∫–∏ –ø–æ aria-label...")

        # –ö–ª–∏–∫ "Mute" - –∏—Å–ø–æ–ª—å–∑—É–µ–º JavaScript –∫–ª–∏–∫ (headless compatible)
        print("\nüîá –ù–∞–∂–∏–º–∞—é –∫–Ω–æ–ø–∫—É 'Mute'...")
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –∫–Ω–æ–ø–∫—É –¥–ª—è SVG path –∏ –∫–ª–∏–∫–∞–µ–º —á–µ—Ä–µ–∑ JavaScript
            clicked = self.driver.execute_script("""
                var elem = document.elementFromPoint(339, 486);
                // –ü–æ–¥–Ω–∏–º–∞–µ–º—Å—è –ø–æ DOM –¥–æ —Ç–µ–≥–∞ BUTTON
                while (elem && elem.tagName !== 'BUTTON') {
                    elem = elem.parentElement;
                }
                if (elem) {
                    console.log('Mute button:', elem);
                    elem.click();
                    return {success: true, aria: elem.getAttribute('aria-label')};
                }
                return {success: false};
            """)

            if clicked.get('success'):
                print(f"   ‚úÖ –ù–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É —á–µ—Ä–µ–∑ JavaScript: {clicked.get('aria')}")
            else:
                print(f"   ‚ö†Ô∏è  –ö–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        except Exception as e:
            print(f"   ‚ö†Ô∏è  –û—à–∏–±–∫–∞: {e}")

        self.human_like_delay(1, 2)
        self.take_screenshot("05_after_mute.png")

        # –ö–ª–∏–∫ "Stop Video" - –∏—Å–ø–æ–ª—å–∑—É–µ–º JavaScript –∫–ª–∏–∫ (headless compatible)
        print("\nüìπ –ù–∞–∂–∏–º–∞—é –∫–Ω–æ–ø–∫—É 'Stop Video'...")
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –∫–Ω–æ–ø–∫—É –¥–ª—è SVG –∏ –∫–ª–∏–∫–∞–µ–º —á–µ—Ä–µ–∑ JavaScript
            clicked = self.driver.execute_script("""
                var elem = document.elementFromPoint(427, 486);
                // –ü–æ–¥–Ω–∏–º–∞–µ–º—Å—è –ø–æ DOM –¥–æ —Ç–µ–≥–∞ BUTTON
                while (elem && elem.tagName !== 'BUTTON') {
                    elem = elem.parentElement;
                }
                if (elem) {
                    console.log('Video button:', elem);
                    elem.click();
                    return {success: true, aria: elem.getAttribute('aria-label')};
                }
                return {success: false};
            """)

            if clicked.get('success'):
                print(f"   ‚úÖ –ù–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É —á–µ—Ä–µ–∑ JavaScript: {clicked.get('aria')}")
            else:
                print(f"   ‚ö†Ô∏è  –ö–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        except Exception as e:
            print(f"   ‚ö†Ô∏è  –û—à–∏–±–∫–∞: {e}")

        self.human_like_delay(1, 2)
        self.take_screenshot("06_after_stop_video.png")

        # –í–≤–æ–¥ –∏–º–µ–Ω–∏ –±–æ—Ç–∞ - CDP Input.insertText (–ø–æ—Å–ª–µ–¥–Ω—è—è –Ω–∞–¥–µ–∂–¥–∞)
        print(f"\n‚úçÔ∏è  –í–≤–æ–∂—É –∏–º—è –±–æ—Ç–∞: '{BOT_NAME}'...")
        try:
            # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –ø–æ–ª–µ —á–µ—Ä–µ–∑ JavaScript
            self.driver.execute_script("""
                var input = document.getElementById('input-for-name');
                if (input) {
                    input.focus();
                    input.click();
                }
            """)

            print(f"   ‚úÖ –ü–æ–ª–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ")
            self.human_like_delay(0.5, 0.7)

            # –ü—Ä–æ–±—É–µ–º CDP Input.insertText - —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞
            print(f"   ‚å®Ô∏è  –í–≤–æ–¥ —á–µ—Ä–µ–∑ CDP Input.insertText...")
            self.driver.execute_cdp_cmd('Input.insertText', {
                'text': BOT_NAME
            })

            self.human_like_delay(0.3, 0.5)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            entered_value = self.driver.execute_script("""
                var input = document.getElementById('input-for-name');
                return input ? input.value : null;
            """)

            print(f"   ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: '{entered_value}'")

            # –ï—Å–ª–∏ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ, –≤—ã—Ö–æ–¥–∏–º –∏–∑ iframe –∏ –ø—Ä–æ–±—É–µ–º –∑–∞–Ω–æ–≤–æ
            if not entered_value:
                print(f"   ‚ö†Ô∏è  –ü—É—Å—Ç–æ! –ü—Ä–æ–±—É—é –≤—ã–π—Ç–∏ –∏–∑ iframe –∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è...")

                # –í—ã—Ö–æ–¥–∏–º –∏–∑ iframe
                self.driver.switch_to.default_content()
                self.human_like_delay(0.3, 0.5)

                # –í—Ö–æ–¥–∏–º –æ–±—Ä–∞—Ç–Ω–æ
                iframe = self.driver.find_element("id", "webclient")
                self.driver.switch_to.frame(iframe)
                self.human_like_delay(0.3, 0.5)

                # –ü—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞
                name_input = self.driver.find_element("id", "input-for-name")
                name_input.click()
                self.human_like_delay(0.3, 0.5)
                name_input.send_keys(BOT_NAME)

                entered_value = name_input.get_attribute('value')
                print(f"   ‚úÖ –ü–æ—Å–ª–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤—Ö–æ–¥–∞: '{entered_value}'")

        except Exception as e:
            print(f"   ‚ö†Ô∏è  –û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏: {e}")
            import traceback
            traceback.print_exc()

        self.human_like_delay(1, 2)
        self.take_screenshot("07_after_name_input.png")

        # –ö–ª–∏–∫ "Join" - –≤—Ö–æ–¥–∏–º –≤ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—é (–∏—Å–ø–æ–ª—å–∑—É–µ–º JavaScript –∫–∞–∫ —Å Mute/Video)
        print("\nüö™ –ù–∞–∂–∏–º–∞—é –∫–Ω–æ–ø–∫—É 'Join'...")
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –∫–Ω–æ–ø–∫—É –∏ –∫–ª–∏–∫–∞–µ–º —á–µ—Ä–µ–∑ JavaScript
            clicked = self.driver.execute_script("""
                var elem = document.elementFromPoint(969, 379);
                // –ü–æ–¥–Ω–∏–º–∞–µ–º—Å—è –ø–æ DOM –¥–æ —Ç–µ–≥–∞ BUTTON
                while (elem && elem.tagName !== 'BUTTON') {
                    elem = elem.parentElement;
                }
                if (elem) {
                    console.log('Join button:', elem);
                    elem.click();
                    return {success: true, aria: elem.getAttribute('aria-label'), text: elem.textContent};
                }
                return {success: false};
            """)

            if clicked.get('success'):
                print(f"   ‚úÖ –ù–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É —á–µ—Ä–µ–∑ JavaScript: '{clicked.get('text')}' (aria: {clicked.get('aria')})")
            else:
                print(f"   ‚ö†Ô∏è  –ö–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        except Exception as e:
            print(f"   ‚ö†Ô∏è  –û—à–∏–±–∫–∞: {e}")

        self.human_like_delay(2, 3)
        self.take_screenshot("08_after_join.png")

        print(f"üìÑ –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {self.driver.title}")

    def take_screenshot(self, name=None):
        """–î–µ–ª–∞–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã"""
        self.screenshot_counter += 1

        if name is None:
            name = f"{self.screenshot_counter:02d}_screenshot.png"

        screenshot_path = self.screenshots_dir / name

        self.driver.save_screenshot(str(screenshot_path))
        print(f"üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç #{self.screenshot_counter} —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {screenshot_path}")

        return screenshot_path

    def close(self):
        """–ó–∞–∫—Ä—ã–≤–∞–µ—Ç –±—Ä–∞—É–∑–µ—Ä"""
        if self.driver:
            print("\nüõë –ó–∞–∫—Ä—ã–≤–∞—é –±—Ä–∞—É–∑–µ—Ä...")
            self.driver.quit()
            print("‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∑–∞–∫—Ä—ã—Ç")

    def run(self):
        """–û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å –±–æ—Ç–∞"""
        try:
            print("="*60)
            print("ü§ñ MeetingBot –∑–∞–ø—É—â–µ–Ω")
            print(f"   Session ID: {self.session_id}")
            print("="*60)

            # –ó–∞–ø—É—Å–∫ –±—Ä–∞—É–∑–µ—Ä–∞
            self.setup_browser()

            # –û—Ç–∫—Ä—ã—Ç–∏–µ –≤—Å—Ç—Ä–µ—á–∏
            self.open_meeting(MEETING_URL)

            print("\n" + "="*60)
            print("‚úÖ –ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            print(f"   –°–∫—Ä–∏–Ω—à–æ—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: {self.screenshots_dir}")
            print("="*60)
            print("\n‚è∏Ô∏è  –ë–æ—Ç –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Ä–∞–±–æ—Ç—É. –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞...")

            # –ñ–¥–µ–º –ø–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–∫—Ä–æ–µ—Ç
            try:
                while True:
                    time.sleep(1)
            except KeyboardInterrupt:
                print("\n\nüëã –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")

        except Exception as e:
            print(f"\n‚ùå –û—à–∏–±–∫–∞: {e}")
            import traceback
            traceback.print_exc()

        finally:
            self.close()


if __name__ == "__main__":
    bot = MeetingBot()
    bot.run()
